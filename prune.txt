项目的基本工作流程是，使用yolov3训练自己数据集，达到理想精度后进行稀疏训练，稀疏训练是重中之重，对需要剪枝的层对应的bn gamma系数进行大幅压缩，理想的压缩情况如下图，然后就可以对不重要的通道或者层进行剪枝，剪枝后可以对模型进行微调恢复精度。

开始：
正常训练（Baseline）
python train.py --model_def config/yolov3-hand.cfg

进行稀疏化训练
python train.py --model_def config/yolov3-hand.cfg -sr --s 0.001  （需要尝试不同的s）
经过 10 次迭代后，60%的BN的gamma 系数已趋向于 0，40 次迭代后 80% 的 gamma 系数已趋向于 0,
随着模型的更新，部分 gamma 系数逐步趋向于 0（表明其重要性逐渐削弱），而部分 gamma 系数能够保持其权重（表明其对网络的输出有一定的重要性）



基于 test_prune.py 文件进行剪枝（通过设定合理的剪枝规则），得到剪枝后的模型prune_0.85_yolov3_ckpt.pth
参考https://blog.csdn.net/yx868yx/article/details/105683237
基于 test_prune.py 文件进行剪枝，得到剪枝后的模型,如果报错[Errno 32] Broken pipe，将num_workers设置为0
运行test_prune.py 出现Threshold should be less than 0.7300. The corresponding prune ratio is 0.773.，需要下调percent=0.85，或者改变s=0.001，直到满足percent=0.85不报错

对剪枝后的模型进行微调
python train.py --model_def config/prune_0.85_yolov3-hand.cfg -pre checkpoints/prune_0.85_yolov3_ckpt.pth

剪枝后模型的测试：
Prune 模型的权重已放在百度网盘上 （提取码: gnzx），可以通过执行以下代码进行测试：

python test.py --model_def config/prune_0.85_yolov3-hand.cfg --weights_path weights/prune_0.85_yolov3_ckpt_99_09240839.pth --data_config config/oxfordhand.data --class_path data/oxforhand.names --conf_thres 0.01

